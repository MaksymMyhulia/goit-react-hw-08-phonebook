{"version":3,"file":"static/js/186.114a3a66.chunk.js","mappings":"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","sources":["pages/RegistrationPage.js"],"sourcesContent":["import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/auth/authOperations';\nimport { useState } from 'react';\n\nconst defaultTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#1D7CF2',\n    },\n  },\n});\n\nexport default function Register() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const onSignUp = location.pathname === '/register';\n  const [empty, setEmpty] = useState({ name: false, email: false });\n  const [passwordValid, setPasswordValid] = useState({ password: false });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n\n    const user = {\n      name: data.get('name'),\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n\n\n    if (user.name === '') {\n      setEmpty(prev => ({ ...prev, name: true }));\n      return;\n    }\n    if (user.email === '') {\n      setEmpty(prev => ({ ...prev, email: true }));\n      return;\n    }\n\n    if (user.password.length < 7 && user.password === '') {\n      setPasswordValid(prev => ({ ...prev, password: true }));\n      return;\n    }\n\n    dispatch(registerUser(user));\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n   \n        <CssBaseline />\n        <Grid item xs={false} sm={6} md={7} />\n        <Grid\n          item\n          xs={12}\n          sm={6}\n          md={5}\n          component={Paper}\n          elevation={24}\n          square\n          sx={{\n            height: '100vh',\n            background: '#D9D9F3',\n            backdropFilter: 'blur(7.5px)',\n          }}\n        >\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'primary.main', boxShadow: 3 }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography\n              component=\"h1\"\n              variant=\"h5\"\n              sx={{\n                color: '#000',\n                textShadow: '-1px -1px 1px #ffffff31, 1px 1px 1px #00000031',\n              }}\n            >\n              SignUp\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 3 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"Name\"\n                    autoComplete=\"given-name\"\n                    name=\"name\"\n                    autoFocus\n                    error={empty.name}\n                    sx={{ boxShadow: 3 }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    error={empty.email}\n                    sx={{ boxShadow: 3 }}\n                    helperText={\n                      'Example of valid email address: qwerty1@example.com'\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    sx={{ boxShadow: 3 }}\n                    //inputProps={{ minLength: 7 }}\n                    error={passwordValid.length < 7}\n                    onChange={e => setPasswordValid(e.target.value)}\n                    helperText={'Password should contains at least 7 symbols'}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2, boxShadow: 3 }}\n                  >\n                    Sign Up\n                  </Button>\n                </Grid>\n              </Grid>\n\n              <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                  {onSignUp && (\n                    <Link to={`/login`} variant=\"body2\">\n                      Already have an account? Sign in\n                    </Link>\n                  )}\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n    </ThemeProvider>\n  );\n}"],"names":["defaultTheme","createTheme","palette","primary","main","Register","dispatch","useDispatch","onSignUp","useLocation","pathname","_useState","useState","name","email","_useState2","_slicedToArray","empty","setEmpty","_useState3","password","_useState4","passwordValid","setPasswordValid","_jsxs","ThemeProvider","theme","children","_jsx","CssBaseline","Grid","item","xs","sm","md","component","Paper","elevation","square","sx","height","background","backdropFilter","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","boxShadow","LockOutlinedIcon","Typography","variant","color","textShadow","noValidate","onSubmit","e","preventDefault","data","FormData","currentTarget","user","get","length","prev","_objectSpread","registerUser","mt","container","spacing","TextField","required","fullWidth","id","label","autoComplete","autoFocus","error","helperText","type","onChange","target","value","Button","mb","justifyContent","Link","to"],"sourceRoot":""}