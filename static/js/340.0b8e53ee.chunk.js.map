{"version":3,"file":"static/js/340.0b8e53ee.chunk.js","mappings":"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","sources":["components/Header/Header.styled.js","components/Header/Header.js","components/Section/Section.styled.js","components/Section/Section.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/ContactsPage.js"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const HeaderStyled = styled.h1`\ntext-align: center;\nmargin-bottom: ${({theme}) => theme.space[4]}px;\ncolor: ${({theme}) => theme.colors.green};\nfont-size: ${({theme}) => theme.fontSizes.l};\n`;","import React from \"react\";\nimport { HeaderStyled } from \"./Header.styled\";\nimport PropTypes from \"prop-types\";\n\nexport const Header = ({ title }) => {\n    return (\n        <HeaderStyled>\n            {title}\n        </HeaderStyled>\n    )\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}","import styled from \"styled-components\"\n\nexport const SectionStyled = styled.section`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n\npadding: ${({theme}) => theme.space[4]}px 0;\n\nwidth: 600px;\nmax-width: 100%;\n\nbackground-color: ${({theme}) => theme.colors.white};\nbox-shadow: ${({theme}) => theme.shadows.normal};\nmargin-top: 65px;\nmargin-left: auto;\nmargin-right: auto;\n`;","import React from \"react\";\nimport { SectionStyled } from \"./Section.styled\"\nimport { Header } from \"components/Header/Header\";\nimport PropTypes from \"prop-types\";\n\nexport const Section = ({ title, children }) => {\n    return (\n        <SectionStyled>\n          <Header title={title} />\n            {children}\n        </SectionStyled>\n    )\n};\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n","import styled from \"styled-components\";\nimport { Form as FormikForm, Field, ErrorMessage as FormikError } from \"formik\";\n\nexport const Form = styled(FormikForm)`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\ngap: 12px;\n\nmargin-bottom: ${({theme}) => theme.space[4]}px;\npadding: ${({theme}) => theme.space[3]}px;\n\nwidth: 480px;\nmax-width: 100%;\n`;\n\nexport const FormField = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: ${({theme}) => theme.space[3]}px;\n\nwidth: 480px;\nmax-width: 100%;\n\n`;\n\nexport const LabelWrapper = styled.div`\ndisplay: flex;\ngap: ${({theme}) => theme.space[3]}px;\nmargin-left: ${({theme}) => theme.space[3]}px;\n`;\n\nexport const FormikField = styled(Field)`\npadding: ${({theme}) => theme.space[3]}px ${({theme}) => theme.space[4]}px;\nmax-width: 100%;\n\nborder-radius: ${({theme}) => theme.space[3]}px;\nborder: none;\nbox-shadow: ${({theme}) => theme.shadows.normal};\ncolor: ${({theme}) => theme.colors.text};\nbackground-color: ${({theme}) => theme.colors.backgroundColor};\n\nfont-size: ${({theme}) => theme.fontSizes.m};\n`;\n\nexport const ErrorMessage = styled(FormikError)`\nmax-width: 480px;\ncolor: ${({theme}) => theme.colors.accent};\n`;\n\nexport const SubmitButton = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n\nmax-width: 100%;\n\ngap: ${({theme}) => theme.space[2]}px;\npadding: ${({theme}) => theme.space[3]}px ${({theme}) => theme.space[4]}px;\nborder-radius: ${({theme}) => theme.space[3]}px;\nborder: none;\nbox-shadow: ${({theme}) => theme.shadows.normal};\ntransition: all 0.25s ease-in-out;\n\nbackground-color: ${({theme}) => theme.colors.backgroundColor};\ncolor: ${({theme}) => theme.colors.text};\ncursor: pointer;\n\n:hover,\n:focus {\n    background-color: ${({theme}) => theme.colors.secondaryBackground};\n    box-shadow: -2px -2px 5px #fff, 2px 2px 5px #8ba793;\n    color: ${({theme}) => theme.colors.white};\n}\n`;","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nimport {\n  Form,\n  FormField,\n  LabelWrapper,\n  FormikField,\n  ErrorMessage,\n  SubmitButton,\n} from './ContactForm.styled';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: Yup.string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .trim()\n    .required(),\n});\n\nconst initialValues = { name: '', number: '' };\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const onAddContact = data => {\n    dispatch(addContact(data));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, { resetForm }) => {\n        onAddContact({ ...values });\n        resetForm();\n      }}\n      validationSchema={schema}\n    >\n      <Form>\n        <FormField htmlFor=\"name\">\n          <LabelWrapper>Name</LabelWrapper>\n          <FormikField\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormField>\n        <ErrorMessage name=\"name\" component=\"span\" />\n\n        <FormField htmlFor=\"number\">\n          <LabelWrapper>Number</LabelWrapper>\n          <FormikField\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormField>\n        <ErrorMessage name=\"number\" component=\"span\" />\n\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n \n\nexport const LabelDescription = styled.label`\n display: flex;\n flex-direction: column;\n gap: ${({theme}) => theme.space[3]}px;\n max-width: 320px;\n margin: 0 auto;\n `;\n\n export const Input = styled.input`\n padding: ${({theme}) => theme.space[3]}px ${({theme}) => theme.space[4]}px;\n \n width: 320px;\n max-width: 100%;\n border-radius: ${({theme}) => theme.space[3]}px;\n margin: 0 auto;\n border: none;\n box-shadow: ${({theme}) => theme.shadows.normal};\n color: ${({theme}) => theme.colors.text};\n background-color: ${({theme}) => theme.colors.backgroundColor};\n\n font-size: ${({theme}) => theme.fontSizes.m};\n\n `;\n \n export const LabelWrapper = styled.div`\n display: flex;\n gap: ${({theme}) => theme.space[3]}px;\n margin-left: ${({theme}) => theme.space[3]}px;\n `;\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nimport { Input, LabelWrapper, LabelDescription } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <LabelDescription>\n      <LabelWrapper>Find contacts by name</LabelWrapper>\n      <Input type=\"text\" value={filter} onChange={changeFilter} />\n    </LabelDescription>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: ${({theme}) => theme.space[4]}px;\npadding: ${({theme}) => theme.space[3]}px ${({theme}) => theme.space[4]}px;\nmargin: 0 auto;\n\nmax-width: 100%;\n`; \n\nexport const Item = styled.li`\ndisplay: flex;\nflex-direction: row;\njustify-content: space-between;\nalign-items: center;\ngap: ${({theme}) => theme.space[4]}px;\n\ncolor: ${({theme}) => theme.colors.text};\n\n`;\n\nexport const DeleteBtn = styled.button`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\ngap: ${({theme}) => theme.space[4]}px;\n\npadding: ${({theme}) => theme.space[3]}px ${({theme}) => theme.space[4]}px;\nborder-radius: ${({theme}) => theme.space[3]}px;\nborder: none;\nbox-shadow: ${({theme}) => theme.shadows.normal};\ntransition: all 0.25s ease-in-out;\n\nbackground-color: ${({theme}) => theme.colors.backgroundColor};\ncolor: ${({theme}) => theme.colors.text};\ncursor: pointer;\n\n:hover,\n:focus {\n    background-color: ${({theme}) => theme.colors.secondaryBackground};\n    box-shadow: -2px -2px 5px #fff, 2px 2px 5px #8ba793;\n    color: ${({theme}) => theme.colors.white};\n}\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { toast } from 'react-toastify';\nimport { toastifyOptions } from 'utils/toastifyOptions';\n\nimport { List, Item, DeleteBtn } from './ContactList.styled';\n\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\n\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectFilteredContacts,\n  selectFilter,\n} from 'redux/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  \n  const result = useSelector(selectFilteredContacts);\n\n  const getFilteredContacts = data => {\n    if (filter.toLowerCase() && !data.length) {\n      toast.warn(`No contacts matching your request`, toastifyOptions);\n    }\n    return data;\n  };\n\n  const filteredContacts = getFilteredContacts(result);\n\n  return (\n    <>\n      {isLoading && contacts.length === 0 && <Loader />}\n      {error && !isLoading && <div>Ooops, error...</div>}\n      <List>\n        {filteredContacts.map(({ name, number, id }) => {\n          return (\n            <Item key={id}>\n              <span>{name}:</span>\n              <span>{number}</span>\n\n              <DeleteBtn\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </DeleteBtn>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};","import { Section } from \"components/Section/Section\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Header } from \"components/Header/Header\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\n\nconst Contacts = () => {\n  return (\n    <Section title=\"Phonebook\">\n      <ContactForm />\n      <Header title=\"Contacts\" />\n      <Filter />\n      <ContactList />\n    </Section>\n  );\n};\n\nexport default Contacts;\n"],"names":["HeaderStyled","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","space","_ref2","colors","green","_ref3","fontSizes","l","Header","title","_jsx","children","SectionStyled","white","shadows","normal","Section","_jsxs","Form","FormikForm","FormField","_templateObject2","LabelWrapper","_templateObject3","_ref4","_ref5","FormikField","Field","_templateObject4","_ref6","_ref7","_ref8","_ref9","_ref10","text","_ref11","backgroundColor","_ref12","m","ErrorMessage","FormikError","_templateObject5","_ref13","accent","SubmitButton","_templateObject6","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","secondaryBackground","_ref22","schema","Yup","shape","name","trim","matches","required","number","initialValues","ContactForm","dispatch","useDispatch","Formik","onSubmit","values","data","resetForm","_objectSpread","addContact","validationSchema","htmlFor","type","pattern","component","LabelDescription","Input","Filter","filter","useSelector","selectFilter","value","onChange","e","setFilter","target","toLowerCase","List","Item","DeleteBtn","ContactList","contacts","selectContacts","isLoading","selectIsLoading","error","selectError","result","selectFilteredContacts","filteredContacts","length","toast","toastifyOptions","_Fragment","Loader","map","id","onClick","deleteContact"],"sourceRoot":""}